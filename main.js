(()=>{"use strict";class t{constructor(t,e,n,s){this.name=t,this.id=Date.now().toString(),this.priority=n,this.date=e,this.complete=s}}const e=document.querySelector(".add-task-modal");function n(t){const e=document.querySelector(".task-body");e.innerText="",t.forEach((t=>{const n=function(t){const e=document.createElement("div");e.classList.add("tasks-container"),e.id=`${t.id} container`;const n=document.createElement("div");n.classList.add("tasks");const s=document.createElement("input");s.type="checkbox",s.id=`task-${t.id}`,s.checked=t.complete,s.addEventListener("change",(()=>{!function(t,e){e.complete=t.checked,c()}(s,t)}));const a=document.createElement("label");a.for=`task-${t.id}`,a.textContent=t.name,n.appendChild(s),n.appendChild(a),e.appendChild(n);const o=document.createElement("div");o.classList.add("tasks-description");const i=document.createElement("div");i.classList.add("descript","date"),i.innerText=t.date.toString();const d=document.createElement("button");switch(d.classList.add("descript","priority"),t.priority){case"high":d.innerText="High",d.classList.add("high");break;case"medium":d.textContent="Medium",d.classList.add("medium");break;case"low":d.textContent="Low",d.classList.add("low")}return d.addEventListener("click",(()=>{!function(t,e){switch(e.priority){case"high":e.priority="medium",t.textContent="Medium",t.classList.remove("high"),t.classList.add("medium");break;case"medium":e.priority="low",t.textContent="Low",t.classList.remove("medium"),t.classList.add("low");break;case"low":e.priority="high",t.textContent="High",t.classList.remove("low"),t.classList.add("high")}c()}(d,t)})),o.appendChild(i),o.appendChild(d),e.appendChild(o),e}(t);e.appendChild(n)})),console.log(t)}let s,a=localStorage.getItem("myProjectList");a=JSON.parse(a||JSON.stringify([]));class o{constructor(t,e){this.name=t,this.id=e,this.tasks=[]}}function c(){localStorage.setItem("myProjectList",JSON.stringify(a))}function i(t){const e=document.querySelector(".project-lists");e.textContent="",t.forEach((t=>{const n=function(t){const e=document.createElement("button");e.classList.add("button-nav","button-project"),e.innerText=t.name,e.dataset.listId=t.id;const n=document.createElement("i");return n.classList.add("fa-solid","fa-trash-can","trash-btn"),e.appendChild(n),e}(t);e.appendChild(n),n.querySelector(".trash-btn").addEventListener("click",(()=>{const s=a.indexOf(t);a.splice(s,1),e.removeChild(n),c()}))}))}document.querySelector(".project-form").addEventListener("submit",(function(t){t.preventDefault();const e=document.querySelector(".project-input");if(""===e.value)return void alert("Project name cannot be empty");const n=new o(e.value,Date.now().toString());a.push(n),i(a),console.log(a),e.value=null,c()})),document.querySelector(".navbar").addEventListener("click",(function(t){document.querySelectorAll(".button-nav").forEach((t=>{t.classList.remove("active")})),"button"===t.target.tagName.toLowerCase()&&(t.target.classList.add("active"),s=t.target.classList.contains("All-task")?"All":t.target.classList.contains("today-task")?"Today":t.target.dataset.listId),console.log(s);const e=document.querySelector(".project-title"),o=document.getElementById("new-task"),c=document.getElementById("span");if("All"===s)o.className="",c.textContent="",e.textContent="All task",function(){let t=[];a.forEach((e=>{t=t.concat(e.tasks)})),n(t),document.querySelector(".task-del").addEventListener("click",(function(){"All"===s&&(t.filter((t=>t.complete)).forEach((t=>{document.getElementById(`${t.id} container`).classList.add("slide")})),setTimeout((()=>{t=t.filter((t=>!t.complete)),a.forEach((t=>{t.tasks=t.tasks.filter((t=>!t.complete))})),n(t)}),200))}))}();else if("Today"===s)e.textContent="Today";else{o.className="fa-solid fa-circle-plus fa-2xl",c.textContent="Add new task";const t=a.find((t=>t.id===s));e.textContent=t.name,n(t.tasks)}})),i(a),document.querySelector("[data-new-task-form]").addEventListener("submit",(function(){const e=document.querySelector(".task-name"),o=document.querySelector(".task-date"),i=document.querySelector(".task-priority"),d=new t(e.value,o.value,i.value,!1),l=a.find((t=>t.id===s));l?(l.tasks.push(d),n(l.tasks)):alert("Please select a project to add your task"),e.value=null,o.value=null,console.log(l),c()})),document.querySelector(".task-del").addEventListener("click",(function(){"All"!==s&&"Today"!==s&&function(){const t=a.find((t=>t.id===s));t.tasks.filter((t=>t.complete)).forEach((t=>{document.getElementById(`${t.id} container`).classList.add("slide")})),setTimeout((()=>{t.tasks=t.tasks.filter((t=>!t.complete)),n(t.tasks),c()}),200)}()})),document.getElementById("new-task").addEventListener("click",(()=>{e.showModal()})),document.querySelector(".close-btn").addEventListener("click",(t=>{t.preventDefault(),e.close()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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U0FBU3VFLGVBQWUsR0FBR2hFLEVBQUtaLGdCQUN4Q2dCLFVBQVVDLElBQUksUUFBUSxJQUV0Q2lFLFlBQVcsS0FDUFEsRUFBY2xGLE1BQVFrRixFQUFjbEYsTUFBTXlFLFFBQU9yRSxJQUFRQSxFQUFLZCxXQUM5RFMsRUFBWW1GLEVBQWNsRixPQUMxQmdCLEdBQW9CLEdBQ3JCLElBR1AsQ0VsSVltRSxFQUVSLElGTHFCdEYsU0FBU3VFLGVBQWUsWUFDaEN0RCxpQkFBaUIsU0FBUyxLQUNuQ2xCLEVBQU93RixXQUFXLElBc0lBdkYsU0FBU0MsY0FBYyxjQUMvQmdCLGlCQUFpQixTQUFVdUMsSUFDckNBLEVBQUVDLGlCQUNGMUQsRUFBT3lGLE9BQU8sRyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvLWRvLTIvLi9zcmMvVGFzay5qcyIsIndlYnBhY2s6Ly90by1kby0yLy4vc3JjL1Byb2plY3QuanMiLCJ3ZWJwYWNrOi8vdG8tZG8tMi8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly90by1kby0yLy4vc3JjL25hdmJhci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwcm9qZWN0bGlzdCwgYWN0aXZlSWQsIHNhdmVUb0xvY2FsU3RvcmFnZSB9IGZyb20gXCIuL1Byb2plY3RcIjtcbmNsYXNzIFRhc2sge1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGRhdGUsIHByaW9yaXR5LCBjb21wbGV0ZSkge1xuICAgICAgICB0aGlzLm5hbWUgPW5hbWU7XG4gICAgICAgIHRoaXMuaWQgPSBEYXRlLm5vdygpLnRvU3RyaW5nKCk7XG4gICAgICAgIHRoaXMucHJpb3JpdHkgPSBwcmlvcml0eTtcbiAgICAgICAgdGhpcy5kYXRlID0gZGF0ZTtcbiAgICAgICAgdGhpcy5jb21wbGV0ZSA9IGNvbXBsZXRlO1xuICAgIH1cbn1cblxuY29uc3QgZGlhbG9nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtdGFzay1tb2RhbFwiKTtcblxuZnVuY3Rpb24gb3BlblRhc2tNb2RhbCgpIHtcbiAgICBjb25zdCBPcGVuTW9kYWxCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5ldy10YXNrXCIpO1xuICAgIE9wZW5Nb2RhbEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBkaWFsb2cuc2hvd01vZGFsKCk7XG4gICAgfSlcbn1cblxuZnVuY3Rpb24gY3JlYXRlVGFza1RlbXBsYXRlKHRhc2spIHtcbiAgICBjb25zdCB0YXNrY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICB0YXNrY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoXCJ0YXNrcy1jb250YWluZXJcIik7XG4gICAgdGFza2NvbnRhaW5lci5pZCA9IGAke3Rhc2suaWR9IGNvbnRhaW5lcmA7XG4gICAgY29uc3QgdGFza3NEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHRhc2tzRGl2LmNsYXNzTGlzdC5hZGQoXCJ0YXNrc1wiKTtcbiAgICBjb25zdCB0YXNrY2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgdGFza2NoZWNrYm94LnR5cGUgPSBcImNoZWNrYm94XCI7XG4gICAgdGFza2NoZWNrYm94LmlkID0gYHRhc2stJHt0YXNrLmlkfWA7XG4gICAgdGFza2NoZWNrYm94LmNoZWNrZWQgPSB0YXNrLmNvbXBsZXRlO1xuICAgIHRhc2tjaGVja2JveC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsICgpID0+IHtcbiAgICAgICAgY2hhbmdlVGFza2NvbmRpdGlvbih0YXNrY2hlY2tib3gsIHRhc2spO1xuICAgIH0pXG4gICAgY29uc3QgdGFza2xhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuICAgIHRhc2tsYWJlbC5mb3IgPSBgdGFzay0ke3Rhc2suaWR9YDtcbiAgICB0YXNrbGFiZWwudGV4dENvbnRlbnQgPSB0YXNrLm5hbWU7IFxuICAgIHRhc2tzRGl2LmFwcGVuZENoaWxkKHRhc2tjaGVja2JveCk7XG4gICAgdGFza3NEaXYuYXBwZW5kQ2hpbGQodGFza2xhYmVsKTtcbiAgICB0YXNrY29udGFpbmVyLmFwcGVuZENoaWxkKHRhc2tzRGl2KTtcbiAgICAvL3Rhc2stZGVzY3JpcHRpb24gRE9NXG4gICAgY29uc3QgdGFza2Rlc2NyaXB0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICB0YXNrZGVzY3JpcHRpb24uY2xhc3NMaXN0LmFkZChcInRhc2tzLWRlc2NyaXB0aW9uXCIpO1xuICAgIGNvbnN0IGRlc2NyaXB0RGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgZGVzY3JpcHREYXRlLmNsYXNzTGlzdC5hZGQoXCJkZXNjcmlwdFwiLCBcImRhdGVcIik7XG4gICAgZGVzY3JpcHREYXRlLmlubmVyVGV4dCA9ICh0YXNrLmRhdGUpLnRvU3RyaW5nKCk7XG4gICAgY29uc3QgZGVzY3JpcHRQcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgZGVzY3JpcHRQcmlvcml0eS5jbGFzc0xpc3QuYWRkKFwiZGVzY3JpcHRcIiwgXCJwcmlvcml0eVwiKTtcbiAgICBzd2l0Y2godGFzay5wcmlvcml0eSkge1xuICAgICAgICBjYXNlICdoaWdoJzpcbiAgICAgICAgICAgIGRlc2NyaXB0UHJpb3JpdHkuaW5uZXJUZXh0ID0gXCJIaWdoXCI7XG4gICAgICAgICAgICBkZXNjcmlwdFByaW9yaXR5LmNsYXNzTGlzdC5hZGQoXCJoaWdoXCIpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdtZWRpdW0nOlxuICAgICAgICAgICAgICAgIGRlc2NyaXB0UHJpb3JpdHkudGV4dENvbnRlbnQgPSBcIk1lZGl1bVwiO1xuICAgICAgICAgICAgICAgIGRlc2NyaXB0UHJpb3JpdHkuY2xhc3NMaXN0LmFkZChcIm1lZGl1bVwiKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2xvdyc6XG4gICAgICAgICAgICBkZXNjcmlwdFByaW9yaXR5LnRleHRDb250ZW50ID0gXCJMb3dcIjtcbiAgICAgICAgICAgIGRlc2NyaXB0UHJpb3JpdHkuY2xhc3NMaXN0LmFkZChcImxvd1wiKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICAvL0NsaWNrYWJsZSBwcmlvcml0eSBkaXYgdG8gY2hhbmdlIHByaW9yaXR5XG4gICAgZGVzY3JpcHRQcmlvcml0eS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAoc3dpdGNoUHJpb3JpdHkoZGVzY3JpcHRQcmlvcml0eSwgdGFzaykpXG4gICAgfSk7XG4gICAgLy9cbiAgICB0YXNrZGVzY3JpcHRpb24uYXBwZW5kQ2hpbGQoZGVzY3JpcHREYXRlKTtcbiAgICB0YXNrZGVzY3JpcHRpb24uYXBwZW5kQ2hpbGQoZGVzY3JpcHRQcmlvcml0eSk7XG4gICAgdGFza2NvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrZGVzY3JpcHRpb24pO1xuICAgIHJldHVybiB0YXNrY29udGFpbmVyO1xufVxuXG4vL2xvZ2ljIGZvciBjbGlja2FibGUgZGl2IHRvIGNoYW5nZSBwcmlvcml0eVxuZnVuY3Rpb24gc3dpdGNoUHJpb3JpdHkoY29udGVudCwgdGFzaykge1xuICAgIHN3aXRjaCh0YXNrLnByaW9yaXR5KSB7XG4gICAgICAgIGNhc2UgXCJoaWdoXCIgOlxuICAgICAgICAgICAgdGFzay5wcmlvcml0eSA9IFwibWVkaXVtXCI7XG4gICAgICAgICAgICBjb250ZW50LnRleHRDb250ZW50ID0gXCJNZWRpdW1cIjtcbiAgICAgICAgICAgIGNvbnRlbnQuY2xhc3NMaXN0LnJlbW92ZShcImhpZ2hcIik7XG4gICAgICAgICAgICBjb250ZW50LmNsYXNzTGlzdC5hZGQoXCJtZWRpdW1cIik7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJtZWRpdW1cIiA6XG4gICAgICAgICAgICAgICAgdGFzay5wcmlvcml0eSA9IFwibG93XCI7XG4gICAgICAgICAgICAgICAgY29udGVudC50ZXh0Q29udGVudCA9IFwiTG93XCI7XG4gICAgICAgICAgICAgICAgY29udGVudC5jbGFzc0xpc3QucmVtb3ZlKFwibWVkaXVtXCIpO1xuICAgICAgICAgICAgICAgIGNvbnRlbnQuY2xhc3NMaXN0LmFkZChcImxvd1wiKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImxvd1wiIDpcbiAgICAgICAgdGFzay5wcmlvcml0eSA9IFwiaGlnaFwiO1xuICAgICAgICBjb250ZW50LnRleHRDb250ZW50ID0gXCJIaWdoXCI7XG4gICAgICAgIGNvbnRlbnQuY2xhc3NMaXN0LnJlbW92ZShcImxvd1wiKTtcbiAgICAgICAgY29udGVudC5jbGFzc0xpc3QuYWRkKFwiaGlnaFwiKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHNhdmVUb0xvY2FsU3RvcmFnZSgpO1xufVxuLy8vLy8vXG5cbi8vbG9naWMgdG8gY2hhbmdlIHRhc2sgY29tcGxldGUgY29uZGl0aW9uIHVwb24gY2xpY2tlZFxuZnVuY3Rpb24gY2hhbmdlVGFza2NvbmRpdGlvbihjaGVja2JveCx0YXNrKSB7XG4gICAgdGFzay5jb21wbGV0ZSA9IGNoZWNrYm94LmNoZWNrZWQ7XG4gICAgc2F2ZVRvTG9jYWxTdG9yYWdlKCk7XG59XG4vLy8vLy9cblxuZnVuY3Rpb24gYWRkTmV3VGFzaygpIHtcbiAgICBjb25zdCB0YXNrbmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudGFzay1uYW1lXCIpO1xuICAgIGNvbnN0IHRhc2tkYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50YXNrLWRhdGVcIik7XG4gICAgY29uc3QgdGFza3ByaW9yaXR5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50YXNrLXByaW9yaXR5XCIpO1xuICAgIGNvbnN0IG5ld1Rhc2sgPSBuZXcgVGFzayh0YXNrbmFtZS52YWx1ZSx0YXNrZGF0ZS52YWx1ZSwgdGFza3ByaW9yaXR5LnZhbHVlLCBmYWxzZSk7XG4gICAgY29uc3QgYWN0aXZlcHJvamVjdCA9IHByb2plY3RsaXN0LmZpbmQocHJvamVjdCA9PiBwcm9qZWN0LmlkID09PSBhY3RpdmVJZCk7XG4gICAgaWYgKGFjdGl2ZXByb2plY3QpIHtcbiAgICAgICAgYWN0aXZlcHJvamVjdC50YXNrcy5wdXNoKG5ld1Rhc2spO1xuICAgICAgICByZW5kZXJUYXNrcyhhY3RpdmVwcm9qZWN0LnRhc2tzKTsgXG4gICAgfSBlbHNlIHtcbiAgICAgICAgYWxlcnQoXCJQbGVhc2Ugc2VsZWN0IGEgcHJvamVjdCB0byBhZGQgeW91ciB0YXNrXCIpO1xuICAgIH1cbiAgICB0YXNrbmFtZS52YWx1ZSA9IG51bGw7XG4gICAgdGFza2RhdGUudmFsdWUgPSBudWxsO1xuICAgIGNvbnNvbGUubG9nKGFjdGl2ZXByb2plY3QpO1xuICAgIHNhdmVUb0xvY2FsU3RvcmFnZSgpO1xufVxuXG5mdW5jdGlvbiByZW5kZXJUYXNrcyh0YXNrcykge1xuICAgIGNvbnN0IHRhc2tib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50YXNrLWJvZHlcIik7XG4gICAgdGFza2JvZHkuaW5uZXJUZXh0ID0gXCJcIjtcbiAgICB0YXNrcy5mb3JFYWNoKHRhc2sgPT4ge1xuICAgICAgICBjb25zdCBUYXNrcyA9IGNyZWF0ZVRhc2tUZW1wbGF0ZSh0YXNrKTtcbiAgICAgICAgdGFza2JvZHkuYXBwZW5kQ2hpbGQoVGFza3MpO1xuICAgIH0pXG4gICAgY29uc29sZS5sb2codGFza3MpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVDb21wbGV0ZWRUYXNrKCkge1xuICAgIGNvbnN0IGFjdGl2ZXByb2plY3QgPSBwcm9qZWN0bGlzdC5maW5kKHByb2plY3QgPT4gcHJvamVjdC5pZCA9PT0gYWN0aXZlSWQpO1xuICAgIGNvbnN0IGNvbXBsZXRlZHRhc2sgPSBhY3RpdmVwcm9qZWN0LnRhc2tzLmZpbHRlcih0YXNrID0+IHRhc2suY29tcGxldGUpO1xuICAgIGNvbXBsZXRlZHRhc2suZm9yRWFjaCh0YXNrID0+IHtcbiAgICAgICAgY29uc3QgdGFza0VsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgJHt0YXNrLmlkfSBjb250YWluZXJgKTtcbiAgICAgICAgdGFza0VsZW1lbnQuY2xhc3NMaXN0LmFkZChcInNsaWRlXCIpO1xuICAgIH0pXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGFjdGl2ZXByb2plY3QudGFza3MgPSBhY3RpdmVwcm9qZWN0LnRhc2tzLmZpbHRlcih0YXNrPT4gIXRhc2suY29tcGxldGUpO1xuICAgICAgICByZW5kZXJUYXNrcyhhY3RpdmVwcm9qZWN0LnRhc2tzKTtcbiAgICAgICAgc2F2ZVRvTG9jYWxTdG9yYWdlKCk7XG4gICAgfSwgMjAwKTtcbiAgICBcbiAgICBcbn1cblxuZnVuY3Rpb24gY2xvc2VUYXNrTW9kYWwoKSB7XG4gICAgY29uc3QgY2xvc2VNb2RhbEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2xvc2UtYnRuXCIpO1xuICAgIGNsb3NlTW9kYWxCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZGlhbG9nLmNsb3NlKCk7XG4gICAgfSlcbn1cblxuXG5cbmV4cG9ydCB7b3BlblRhc2tNb2RhbCwgY2xvc2VUYXNrTW9kYWwsIGFkZE5ld1Rhc2ssIHJlbmRlclRhc2tzLCByZW1vdmVDb21wbGV0ZWRUYXNrfTsiLCJpbXBvcnQgeyByZW5kZXJUYXNrcyB9IGZyb20gXCIuL1Rhc2tcIjtcbmltcG9ydCB7IHJlbmRlckFsbHRhc2sgfSBmcm9tIFwiLi9uYXZiYXJcIjtcbmxldCBkZWZhdWx0UHJvamVjdExpc3Q9W107XG5sZXQgcHJvamVjdGxpc3QgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIm15UHJvamVjdExpc3RcIik7XG4gICAgcHJvamVjdGxpc3QgPSBKU09OLnBhcnNlKHByb2plY3RsaXN0IHx8IEpTT04uc3RyaW5naWZ5KGRlZmF1bHRQcm9qZWN0TGlzdCkpO1xubGV0IGFjdGl2ZUlkO1xuXG5jbGFzcyBQcm9qZWN0IHtcbiAgICBjb25zdHJ1Y3RvcihuYW1lLGlkKSB7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuaWQgPSBpZDtcbiAgICAgICAgdGhpcy50YXNrcyA9IFtdO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHNhdmVUb0xvY2FsU3RvcmFnZSgpe1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwibXlQcm9qZWN0TGlzdFwiLCBKU09OLnN0cmluZ2lmeShwcm9qZWN0bGlzdCkpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVOZXdQcm9qZWN0IChlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHByb2plY3RpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdC1pbnB1dFwiKTtcbiAgICBpZiAocHJvamVjdGlucHV0LnZhbHVlID09PSBcIlwiKSB7XG4gICAgICAgIGFsZXJ0KFwiUHJvamVjdCBuYW1lIGNhbm5vdCBiZSBlbXB0eVwiKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBuZXdwcm9qZWN0ID0gbmV3IFByb2plY3QocHJvamVjdGlucHV0LnZhbHVlLCBEYXRlLm5vdygpLnRvU3RyaW5nKCkpO1xuICAgIHByb2plY3RsaXN0LnB1c2gobmV3cHJvamVjdCk7XG4gICAgcmVuZGVyUHJvamVjdChwcm9qZWN0bGlzdCk7XG4gICAgY29uc29sZS5sb2cocHJvamVjdGxpc3QpO1xuICAgIHByb2plY3RpbnB1dC52YWx1ZSA9IG51bGw7XG4gICAgc2F2ZVRvTG9jYWxTdG9yYWdlKCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVByb2plY3RUZW1wbGF0ZSAocHJvamVjdCkge1xuICAgIGNvbnN0IHByb2plY3RidXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIHByb2plY3RidXR0b24uY2xhc3NMaXN0LmFkZChcImJ1dHRvbi1uYXZcIiwgXCJidXR0b24tcHJvamVjdFwiKTtcbiAgICBwcm9qZWN0YnV0dG9uLmlubmVyVGV4dCA9IHByb2plY3QubmFtZTtcbiAgICBwcm9qZWN0YnV0dG9uLmRhdGFzZXQubGlzdElkID0gcHJvamVjdC5pZDtcbiAgICBjb25zdCBwcm9qZGVsZXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlcIik7XG4gICAgcHJvamRlbGV0ZS5jbGFzc0xpc3QuYWRkKFwiZmEtc29saWRcIiwgXCJmYS10cmFzaC1jYW5cIiwgXCJ0cmFzaC1idG5cIik7XG4gICAgcHJvamVjdGJ1dHRvbi5hcHBlbmRDaGlsZChwcm9qZGVsZXRlKTtcbiAgICByZXR1cm4gcHJvamVjdGJ1dHRvbjtcbn0gXG5cbmZ1bmN0aW9uIHJlbmRlclByb2plY3QgKGxpc3QpIHtcbiAgICBjb25zdCBwcm9qZWN0Y29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0LWxpc3RzXCIpO1xuICAgIHByb2plY3Rjb250YWluZXIudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgIGxpc3QuZm9yRWFjaChwcm9qZWN0ID0+IHtcbiAgICAgICAgY29uc3QgcHJvamVjdEJ1dHRvbiA9IGNyZWF0ZVByb2plY3RUZW1wbGF0ZShwcm9qZWN0KTtcbiAgICAgICAgcHJvamVjdGNvbnRhaW5lci5hcHBlbmRDaGlsZChwcm9qZWN0QnV0dG9uKTtcbiAgICAvL1JlbW92ZSBwcm9qZWN0IGxvZ2ljXG4gICAgY29uc3QgZGVsZXRlcHJvakJ0biA9IHByb2plY3RCdXR0b24ucXVlcnlTZWxlY3RvcihcIi50cmFzaC1idG5cIik7XG4gICAgZGVsZXRlcHJvakJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBjb25zdCBwcm9qZWN0SW5kZXggPSBwcm9qZWN0bGlzdC5pbmRleE9mKHByb2plY3QpO1xuICAgICAgICBwcm9qZWN0bGlzdC5zcGxpY2UocHJvamVjdEluZGV4LCAxKTtcbiAgICAgICAgcHJvamVjdGNvbnRhaW5lci5yZW1vdmVDaGlsZChwcm9qZWN0QnV0dG9uKTtcbiAgICAgICAgc2F2ZVRvTG9jYWxTdG9yYWdlKCk7XG4gICAgfSlcbiAgICB9KVxufVxuXG5mdW5jdGlvbiBnZXRBY3RpdmVQcm9qZWN0IChlKSB7XG4gICAgY29uc3QgcHJvamVjdGJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuYnV0dG9uLW5hdlwiKTtcbiAgICBwcm9qZWN0YnRuLmZvckVhY2goYnRuID0+IHtcbiAgICAgICAgYnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XG4gICAgfSlcbiAgICBpZiAoZS50YXJnZXQudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSBcImJ1dHRvblwiKSB7XG4gICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XG4gICAgICAgIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJBbGwtdGFza1wiKSkge1xuICAgICAgICAgICAgYWN0aXZlSWQgPSBcIkFsbFwiO1xuICAgICAgICB9IGVsc2UgaWYgKCBlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJ0b2RheS10YXNrXCIpKSB7XG4gICAgICAgICAgICBhY3RpdmVJZCA9IFwiVG9kYXlcIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGFjdGl2ZUlkID0gZS50YXJnZXQuZGF0YXNldC5saXN0SWQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc29sZS5sb2coYWN0aXZlSWQpO1xuICAgIC8vYWRkIHJlbmRlciB0YXNrcyBmdW5jdGlvbiBmb3IgYWN0aXZlIHByb2plY3RcbiAgICBjb25zdCBwcm9qZWN0dGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2plY3QtdGl0bGVcIik7XG4gICAgLy9PbWl0IGFkZC10YXNrIGJ1dHRvbiBpbiB0b2RheSB0YWIgYWxsIEFsbCB0YXNrIHRhYlxuICAgIGNvbnN0IHBsdXNCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5ldy10YXNrXCIpO1xuICAgIGNvbnN0IHNwYW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwYW5cIik7XG5cbiAgICBpZiAoYWN0aXZlSWQgPT09IFwiQWxsXCIpIHtcbiAgICAgICAgcGx1c0J1dHRvbi5jbGFzc05hbWUgPSBcIlwiO1xuICAgICAgICBzcGFuLnRleHRDb250ZW50ID0gXCJcIjtcbiAgICAgICAgcHJvamVjdHRpdGxlLnRleHRDb250ZW50ID0gXCJBbGwgdGFza1wiO1xuICAgICAgICByZW5kZXJBbGx0YXNrKCk7XG4gICAgfSBlbHNlIGlmIChhY3RpdmVJZCA9PT0gXCJUb2RheVwiKSB7XG4gICAgICAgIHByb2plY3R0aXRsZS50ZXh0Q29udGVudCA9IFwiVG9kYXlcIlxuICAgIH0gZWxzZSB7XG4gICAgICAgIHBsdXNCdXR0b24uY2xhc3NOYW1lID0gXCJmYS1zb2xpZCBmYS1jaXJjbGUtcGx1cyBmYS0yeGxcIjtcbiAgICAgICAgc3Bhbi50ZXh0Q29udGVudCA9IFwiQWRkIG5ldyB0YXNrXCI7XG4gICAgICAgIGNvbnN0IGFjdGl2ZXByb2ogPSBwcm9qZWN0bGlzdC5maW5kKHByb2plY3QgPT4gcHJvamVjdC5pZCA9PT0gYWN0aXZlSWQpO1xuICAgICAgICBwcm9qZWN0dGl0bGUudGV4dENvbnRlbnQgPSBhY3RpdmVwcm9qLm5hbWU7XG4gICAgICAgIHJlbmRlclRhc2tzKGFjdGl2ZXByb2oudGFza3MpO1xuICAgIH1cbn1cblxuXG5leHBvcnQge3Byb2plY3RsaXN0LCBhY3RpdmVJZCwgY3JlYXRlTmV3UHJvamVjdCwgZ2V0QWN0aXZlUHJvamVjdCwgc2F2ZVRvTG9jYWxTdG9yYWdlLCByZW5kZXJQcm9qZWN0fTsiLCJpbXBvcnQgeyBjcmVhdGVOZXdQcm9qZWN0ICwgZ2V0QWN0aXZlUHJvamVjdCwgcmVuZGVyUHJvamVjdCxwcm9qZWN0bGlzdCxhY3RpdmVJZCB9IGZyb20gXCIuL1Byb2plY3RcIjtcbmltcG9ydCB7IGNsb3NlVGFza01vZGFsLCBvcGVuVGFza01vZGFsLCBhZGROZXdUYXNrLCByZW1vdmVDb21wbGV0ZWRUYXNrIH0gZnJvbSBcIi4vVGFza1wiO1xuaW1wb3J0IHsgcmVtb3ZlVGFza2luQWxsIH0gZnJvbSBcIi4vbmF2YmFyXCI7XG5mdW5jdGlvbiBQcm9qZWN0RXZlbnRMaXN0ZW5lciAoKSB7XG4gICAgY29uc3QgcHJvamVjdGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2plY3QtZm9ybVwiKTtcbiAgICBwcm9qZWN0Zm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChjcmVhdGVOZXdQcm9qZWN0KSk7XG4gICAgY29uc3QgbmF2YmFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uYXZiYXJcIik7XG4gICAgbmF2YmFyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZ2V0QWN0aXZlUHJvamVjdCkpO1xuICAgIHJlbmRlclByb2plY3QocHJvamVjdGxpc3QpO1xufVxuXG5mdW5jdGlvbiBUYXNrRXZlbnRMaXN0ZW5lcigpIHtcbiAgICBjb25zdCB0YXNrZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1uZXctdGFzay1mb3JtXVwiKTtcbiAgICB0YXNrZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChhZGROZXdUYXNrKSk7XG4gICAgY29uc3QgdGFza0RlbEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudGFzay1kZWxcIik7XG4gICAgdGFza0RlbEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChhY3RpdmVJZCAhPT0gXCJBbGxcIiAmJiBhY3RpdmVJZCAhPT0gXCJUb2RheVwiKSB7XG4gICAgICAgICAgICByZW1vdmVDb21wbGV0ZWRUYXNrKCk7XG4gICAgICAgIH1cbiAgICB9KTtcblxufVxuUHJvamVjdEV2ZW50TGlzdGVuZXIoKTtcblRhc2tFdmVudExpc3RlbmVyKCk7XG5vcGVuVGFza01vZGFsKCk7XG5jbG9zZVRhc2tNb2RhbCgpO1xuXG4iLCJpbXBvcnQgeyBwcm9qZWN0bGlzdCwgYWN0aXZlSWQgfSBmcm9tIFwiLi9Qcm9qZWN0XCI7XG5pbXBvcnQgeyByZW5kZXJUYXNrcyB9IGZyb20gXCIuL1Rhc2tcIjtcbmZ1bmN0aW9uIHJlbmRlckFsbHRhc2sgKCkge1xuICAgIGxldCBBbGx0YXNrcyA9IFtdO1xuICAgIHByb2plY3RsaXN0LmZvckVhY2gocHJvamVjdCA9PiB7XG4gICAgICAgIEFsbHRhc2tzID0gQWxsdGFza3MuY29uY2F0KHByb2plY3QudGFza3MpO1xuICAgIH0pXG4gICAgcmVuZGVyVGFza3MoQWxsdGFza3MpO1xuICAgIGNvbnN0IHRhc2tEZWxCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRhc2stZGVsXCIpO1xuICAgIHRhc2tEZWxCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoYWN0aXZlSWQgPT09IFwiQWxsXCIpIHtcbiAgICAgICAgICAgIGNvbnN0IEFsbGNvbXBsZXRlZHRhc2tzID0gQWxsdGFza3MuZmlsdGVyKHRhc2sgPT4gdGFzay5jb21wbGV0ZSk7XG4gICAgICAgICAgICBBbGxjb21wbGV0ZWR0YXNrcy5mb3JFYWNoKHRhc2sgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRhc2tFbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYCR7dGFzay5pZH0gY29udGFpbmVyYCk7XG4gICAgICAgICAgICAgICAgdGFza0VsZW0uY2xhc3NMaXN0LmFkZChcInNsaWRlXCIpXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgQWxsdGFza3MgPSBBbGx0YXNrcy5maWx0ZXIodGFzayA9PiAhdGFzay5jb21wbGV0ZSk7XG4gICAgICAgICAgICAgICAgcHJvamVjdGxpc3QuZm9yRWFjaChwcm9qZWN0ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcHJvamVjdC50YXNrcyA9IHByb2plY3QudGFza3MuZmlsdGVyKHRhc2sgPT4gIXRhc2suY29tcGxldGUpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgcmVuZGVyVGFza3MoQWxsdGFza3MpO1xuICAgICAgICAgICAgfSwgMjAwKVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgICAgXG59XG5cblxuXG5leHBvcnQge3JlbmRlckFsbHRhc2t9OyJdLCJuYW1lcyI6WyJUYXNrIiwiY29uc3RydWN0b3IiLCJuYW1lIiwiZGF0ZSIsInByaW9yaXR5IiwiY29tcGxldGUiLCJ0aGlzIiwiaWQiLCJEYXRlIiwibm93IiwidG9TdHJpbmciLCJkaWFsb2ciLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJyZW5kZXJUYXNrcyIsInRhc2tzIiwidGFza2JvZHkiLCJpbm5lclRleHQiLCJmb3JFYWNoIiwidGFzayIsIlRhc2tzIiwidGFza2NvbnRhaW5lciIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJ0YXNrc0RpdiIsInRhc2tjaGVja2JveCIsInR5cGUiLCJjaGVja2VkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNoZWNrYm94Iiwic2F2ZVRvTG9jYWxTdG9yYWdlIiwiY2hhbmdlVGFza2NvbmRpdGlvbiIsInRhc2tsYWJlbCIsImZvciIsInRleHRDb250ZW50IiwiYXBwZW5kQ2hpbGQiLCJ0YXNrZGVzY3JpcHRpb24iLCJkZXNjcmlwdERhdGUiLCJkZXNjcmlwdFByaW9yaXR5IiwiY29udGVudCIsInJlbW92ZSIsImNyZWF0ZVRhc2tUZW1wbGF0ZSIsImNvbnNvbGUiLCJsb2ciLCJhY3RpdmVJZCIsInByb2plY3RsaXN0IiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIkpTT04iLCJwYXJzZSIsInN0cmluZ2lmeSIsIlByb2plY3QiLCJzZXRJdGVtIiwicmVuZGVyUHJvamVjdCIsImxpc3QiLCJwcm9qZWN0Y29udGFpbmVyIiwicHJvamVjdCIsInByb2plY3RCdXR0b24iLCJwcm9qZWN0YnV0dG9uIiwiZGF0YXNldCIsImxpc3RJZCIsInByb2pkZWxldGUiLCJjcmVhdGVQcm9qZWN0VGVtcGxhdGUiLCJwcm9qZWN0SW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwicmVtb3ZlQ2hpbGQiLCJlIiwicHJldmVudERlZmF1bHQiLCJwcm9qZWN0aW5wdXQiLCJ2YWx1ZSIsImFsZXJ0IiwibmV3cHJvamVjdCIsInB1c2giLCJxdWVyeVNlbGVjdG9yQWxsIiwiYnRuIiwidGFyZ2V0IiwidGFnTmFtZSIsInRvTG93ZXJDYXNlIiwiY29udGFpbnMiLCJwcm9qZWN0dGl0bGUiLCJwbHVzQnV0dG9uIiwiZ2V0RWxlbWVudEJ5SWQiLCJzcGFuIiwiY2xhc3NOYW1lIiwiQWxsdGFza3MiLCJjb25jYXQiLCJmaWx0ZXIiLCJzZXRUaW1lb3V0IiwicmVuZGVyQWxsdGFzayIsImFjdGl2ZXByb2oiLCJmaW5kIiwidGFza25hbWUiLCJ0YXNrZGF0ZSIsInRhc2twcmlvcml0eSIsIm5ld1Rhc2siLCJhY3RpdmVwcm9qZWN0IiwicmVtb3ZlQ29tcGxldGVkVGFzayIsInNob3dNb2RhbCIsImNsb3NlIl0sInNvdXJjZVJvb3QiOiIifQ==